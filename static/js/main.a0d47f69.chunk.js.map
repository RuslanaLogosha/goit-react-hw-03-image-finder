{"version":3,"sources":["components/Searchbar/Searchbar.js","components/pixabay-api.js","components/ImagesErrorView/ImagesErrorView.js","components/ImagePendingView/ImagePendingView.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/ImagesInfo/ImagesInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","requestKey","handleRequestChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImages","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","ImagePendingView","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","onClick","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","scroll","scrollToBottom","ImagesInfo","error","status","renderNewRequestKey","nextName","nextPage","pixabayApi","prevState","hits","catch","finally","onClickLoadMore","prevProps","prevName","prevPage","App","handleFormSubmit","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0d47f69.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\n\nclass Searchbar extends Component {\n  state = {\n    requestKey: '',\n  }\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleRequestChange = event => {\n    this.setState({ requestKey: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.requestKey.trim() === '') {\n      toast('Введите запрос.');\n      return;\n    }\n\n    this.props.onSubmit(this.state.requestKey);\n    this.setState({ requestKey: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n           <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.requestKey}\n            onChange={this.handleRequestChange}\n            />\n        </form>\n      </header>\n    )\n  }\n}\n\nexport default Searchbar;","const API_KEY = '18957101-8b16af6433f6d6830b4844a72';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(requestKey, page) {\n  const url = `${BASE_URL}?q=${requestKey}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;","import PropTypes from 'prop-types';\n\nfunction ImagesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImagesErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImagesErrorView;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImagePendingView extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#303f9f\"\n        height={50}\n        width={50}\n      />\n    );\n  }\n}\n\nexport default ImagePendingView;","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageUrl } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={this.toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItemImage\"\n        />\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={image.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;","import { Component } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n  };\n\n  scroll = () => {\n    this.props.onClick();\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\n        Load more\n      </button>\n    );\n  }\n}\n\nexport default Button;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pixabayApi from '../pixabay-api';\nimport ImagesErrorView from '../ImagesErrorView';\nimport ImagePendingView from '../ImagePendingView';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\n\nclass ImagesInfo extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: 'idle',\n    page: 1,\n  };\n\n  static propTypes = {\n    requestKey: PropTypes.string.isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.requestKey;\n    const nextName = this.props.requestKey;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevName !== nextName) {\n      this.setState({ page: 1 });\n      this.renderNewRequestKey(nextName,nextPage);\n    }\n \n    if (prevPage !== nextPage && prevPage < nextPage) {\n      this.renderNewRequestKey(nextName, nextPage)\n    }\n  };\n\n  renderNewRequestKey = (nextName, nextPage) => {\n    this.setState({ status: 'pending' });\n\n    pixabayApi\n      .fetchImages(nextName, nextPage)\n      .then(response =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...response.hits],\n        })))\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ status: 'resolved' }));    \n  };\n\n  onClickLoadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { status, error } = this.state; \n\n    if (status === 'idle') {\n      return <p>Please enter your search term</p>;\n    }\n    \n    if (status === 'pending') {\n      return <ImagePendingView />;\n    }\n\n    if (status === 'rejected') {\n      return <ImagesErrorView message={error.message} />;\n    }\n \n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={this.state.images} />\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\n        </>\n      );\n    }\n  }\n}\n\nexport default ImagesInfo;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImagesInfo from './components/ImagesInfo';\nimport './app.css';\n\nclass App extends Component {\n  state = {\n    requestKey: '',\n  }\n  \n  handleFormSubmit = requestKey => {\n    this.setState({ requestKey });\n  }\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit}></Searchbar>\n        <ImagesInfo requestKey={this.state.requestKey} />\n        <ToastContainer autoClose={3000} />\n      </>  \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}